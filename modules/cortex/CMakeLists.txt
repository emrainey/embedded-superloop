add_architecture(NAME cortex
    SOURCES
        ${CMAKE_CURRENT_SOURCE_DIR}/source/vectors.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/reset.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/globals.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/cache.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/trigger.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/initialize.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/swo.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/nvic.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/mpu.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/memory.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/spinhalt.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/bist.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/ticks.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/clocks.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/handlers/dummy.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/handlers/tick.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/handlers/entry.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/handlers/non_maskable_interrupt.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/handlers/faults/hard.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/handlers/faults/bus.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/handlers/faults/memory_management.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/handlers/faults/usage.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/handlers/supervisor/call.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/handlers/supervisor/pending.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/handlers/dummy.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/handlers/get_exception_frame.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/supervisor/bist.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/supervisor/deescalate.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/supervisor/escalate.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/supervisor/query.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/supervisor/reset.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/supervisor/restore.cpp
    INCLUDES
        ${CMAKE_CURRENT_SOURCE_DIR}/include
    VENDOR
        arm
    GENERIC_MODULES
        core
    CONFIGURATIONS
        ${LOCAL_CONFIGURATIONS}
    NO_BOARDS
)

# This is hard-coded for now, but we should make it more flexible in the future
host_unit_test(NAME test-memory
    SOURCES
        ${CMAKE_CURRENT_SOURCE_DIR}/tests/memory.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/source/memory.cpp
    INCLUDES
        ${CMAKE_CURRENT_SOURCE_DIR}/include
        ${CMAKE_SOURCE_DIR}/modules/stm32/include
    LIBRARIES
        strict core-none-all
    CATCH2
    NO_CONFIGURATIONS
    NO_BOARDS
)